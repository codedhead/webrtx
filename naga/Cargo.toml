[package]
name = "naga"
version = "0.1.0"
authors = ["Jun <codedhead@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["wee_alloc", "console_error_panic_hook", "spv-in", "wgsl-out"]
spv-in = []
wgsl-out = []

[dependencies]
naga = { git = "https://github.com/gfx-rs/naga", branch = "master", features = [
  "spv-in",
  "wgsl-out",
] }
wasm-bindgen = "0.2.67"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
lazy_static = "1.4.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.17"

[profile.release]
lto = true
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[package.metadata.wasm-pack.profile.release.wasm-bindgen]
debug-js-glue = false
demangle-name-section = true
dwarf-debug-info = false
